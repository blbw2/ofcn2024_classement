---
title: "OFCN 2024: Classement des prévisionnistes"
lang: fr
toc-depth: 1
format: revealjs
   
editor_options: 
  chunk_output_type: console
editor: 
  markdown: 
    wrap: 72
---

```{r, include=FALSE}
library(knitr)
library(tidyverse) 
library(showtext) 
library(ofce)
library(ggpubr)
library(kableExtra)
library(gt)

load("classements2023.rda")

opts_chunk$set(
  echo = FALSE,
  warning = FALSE,
  message = FALSE,
  fig.pos="H", 
  out.extra="",
  dev="ragg_png",
  fig.showtext=TRUE,
  cache=FALSE)

showtext_opts(dpi=200)
showtext_auto()
load("classements2023.rda")
load("gt2023.rda")
load("prev2023.rda")
```

```{css}
h2{font-size:16pt!important}
```

## Calcul des scores

Pour chaque variable on calcule un score :

$$score_{i,k}= \frac{|[|\varepsilon_{i,k}|-min(|\varepsilon_{k}|)]|}{\sigma_{|\varepsilon_k|}}$$
Avec $\varepsilon$ l'erreur de prévision pour la variable $k$.

On calcule soit un score "brut" comme somme des scores par variables,
soit un score pondéré.

-   Pour l'instant la pondération : 0.5 x PIB ; 0.2 x Chomage ; 0.2 x
    Solde; 0.1 x IPCH

## Classement par score

```{r}
gt_scores <- Classement_scores|> 
  select(institut,score_total,score_pondéré) |> 
  gt() |> 
  opt_interactive(
    use_pagination = FALSE,
    use_pagination_info = FALSE
  ) %>% 
  tab_style(
    locations = cells_body(columns = institut),
    style = cell_text(weight = "bold")
  ) %>% 
  data_color(
    columns = score_total,
    rows = score_total < sort(score_total)[4],
    method = "factor",
    palette = c("gold", "grey", "brown" )) %>% 
  data_color(
    columns = score_pondéré,
    rows = score_pondéré < sort(score_pondéré)[4],
    method = "factor",
    palette = c("gold", "grey", "brown" )) |> 
tab_options(
  table.font.size = 18) |> 
  fmt_number(decimals= 1)|> 
  as_raw_html() 

gt_scores
```

## Rappel méthodo

-   1 classement par variable

    -   4 variables : PIB, inflation (IPCH), chômage, solde public.

-   Classement par ordre croisssant d'erreur de prévision (en valeur
    absolue).

-   Prévisions manquantes: on impute la valeur de la pire prévision.

-   J'ai ajouté une colonne "Total" qui fait la moyenne des classements
    par variable

    -   (Pour essayer de pénaliser les prévisions incohérentes...)

## Prévisions 2022 pour l'année 2023:

```{r}

gt_2023 <- Classement_2023 |> 
  gt() |> 
  opt_interactive(
    use_pagination = FALSE,
    use_pagination_info = FALSE
  ) %>% 
  tab_style(
    locations = cells_body(columns = institut),
    style = cell_text(weight = "bold")
  ) %>% 
  data_color(
    columns = PIB,
    rows = PIB < sort(PIB)[4],
    method = "factor",
    palette = c("gold", "grey", "brown" )) %>% 
  data_color(
    columns = IPCH,
    rows = IPCH < sort(IPCH)[4],
    method = "factor",
    palette = c("gold", "grey", "brown" )) %>% 
  data_color(
    columns = Chomage,
    rows = Chomage < sort(Chomage)[4],
    method = "factor",
    palette = c("gold", "grey", "brown" )) %>% 
  data_color(
    columns = `Solde public`,
    rows = `Solde public` < sort(`Solde public`)[4],
    method = "factor",
    palette = c("gold", "grey", "brown" )) %>% 
  data_color(
    columns =  total,
    rows = total < sort(total)[4],
    method = "factor",
    palette = c("gold", "grey", "brown" )) |> 
tab_options(
  table.font.size = 18) |> 
  as_raw_html()

gt_2023

```

## Prévisions 2023 pour 2023 :

```{r}

gt_2023b <- Classement_2023b |> 
  gt() |> 
  opt_interactive(
    use_pagination = FALSE,
    use_pagination_info = FALSE
  ) %>% 
  tab_style(
    locations = cells_body(columns = institut),
    style = cell_text(weight = "bold")
  ) %>% 
  data_color(
    columns = PIB,
    rows = PIB < sort(PIB)[4],
    method = "factor",
    palette = c("gold", "grey", "brown" )) %>% 
  data_color(
    columns = IPCH,
    rows = IPCH < sort(IPCH)[4],
    method = "factor",
    palette = c("gold", "grey", "brown" )) %>% 
  data_color(
    columns = Chomage,
    rows = Chomage < sort(Chomage)[4],
    method = "factor",
    palette = c("gold", "grey", "brown" )) %>% 
  data_color(
    columns = `Solde public`,
    rows = `Solde public` < sort(`Solde public`)[4],
    method = "factor",
    palette = c("gold", "grey", "brown" )) %>% 
  data_color(
    columns = total,
    rows = total < sort(total)[6],
    method = "factor",
    palette = c("gold", "grey", "brown" ))|> 
tab_options(
  table.font.size = 18) 

gt_2023b
```

# Annexe

## Previsions 2022 pour 2023

PIB +1.1% ; Chomage 7.5% (fin d'année) ; IPCH +4.2% (fin d'année) ;
Solde public -5.5%

```{r}
prev2022 |> 
  select(institut,variable, Prev2022_2023) |> 
  pivot_wider(names_from = "variable", values_from = "Prev2022_2023") |> 
  gt()|> 
  opt_interactive(
    use_pagination = FALSE,
    use_pagination_info = FALSE
  ) %>% 
  tab_style(
    locations = cells_body(columns = institut),
    style = cell_text(weight = "bold")
  )|> 
tab_options(
  table.font.size = 18) 
```
